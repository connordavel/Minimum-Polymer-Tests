from openff.toolkit import Topology
from openff.toolkit.utils import get_data_file_path
import contextlib

def successfully_loaded(top):
    match_info = [atom.metadata["match_info"] for atom in top.atoms]
    return all([bool(match) for match in match_info])

# #____________SIMPLE PROTEIN TESTS (should already be implemented)______________
# top = Topology.from_pdb(get_data_file_path("proteins/TwoMol_SER_CYS.pdb"))
# assert successfully_loaded(top)

# top = Topology.from_pdb(get_data_file_path("proteins/T4-protein.pdb"))
# assert successfully_loaded(top)
# #____________________SIMPLE POLYMERS (custom substructures)____________________
rubber_substructs = {
                        "naturalrubber": "[#6D4+0:16](-[#6D3+0:17](=[#6D3+0:18](-[#6D4+0:19](-[#1D1+0:20])(-[#1D1+0:21])-[*:22])-[#6D4+0:23](-[#1D1+0:24])(-[#1D1+0:25])-[#1D1+0:26])-[#1D1+0:27])(-[#1D1+0:28])(-[#1D1+0:29])-[*:30]",
                        "naturalrubber_TERM1": "[#6D4+0:16](-[#6D3+0:17](=[#6D3+0:18](-[#6D4+0:19](-[#1D1+0:20])(-[#1D1+0:21])-[#1D1+0:22])-[#6D4+0:23](-[#1D1+0:24])(-[#1D1+0:25])-[#1D1+0:26])-[#1D1+0:27])(-[#1D1+0:28])(-[#1D1+0:29])-[*:30]",
                        "naturalrubber_TERM2": "[#6D4+0:16](-[#6D3+0:17](=[#6D3+0:18](-[#6D4+0:19](-[#1D1+0:20])(-[#1D1+0:21])-[*:22])-[#6D4+0:23](-[#1D1+0:24])(-[#1D1+0:25])-[#1D1+0:26])-[#1D1+0:27])(-[#1D1+0:28])(-[#1D1+0:29])-[#1D1+0:30]"
                    }
top = Topology.from_pdb("naturalrubber.pdb", _custom_substructures=rubber_substructs)
assert successfully_loaded(top)


PE_substructs = {
                    "PE": "[#6D4+0:9](-[#1D1+0:10])(-[#1D1+0:11])(-[#6D4+0:12](-[#1D1+0:13])(-[#1D1+0:14])-[*:15])-[*:16]",
                    "PE_TERM1": "[#6D4+0:9](-[#1D1+0:10])(-[#1D1+0:11])(-[#6D4+0:12](-[#1D1+0:13])(-[#1D1+0:14])-[#1D1+0:15])-[*:16]"
                }
top = Topology.from_pdb("polyethylene.pdb", _custom_substructures=PE_substructs)
assert successfully_loaded(top)


pnipam_substructs = {
                        "pnipam": "[#6D4+0:22](-[#1D1+0:23])(-[#1D1+0:24])(-[#6D4+0:25](-[#1D1+0:26])(-[#6D3+0:27](=[#8D1+0:28])-[#7D3+0:29](-[#1D1+0:30])-[#6D4+0:31](-[#1D1+0:32])(-[#6D4+0:33](-[#1D1+0:34])(-[#1D1+0:35])-[#1D1+0:36])-[#6D4+0:37](-[#1D1+0:38])(-[#1D1+0:39])-[#1D1+0:40])-[*:41])-[*:42]",
                        "pnipam_TERM2": "[#6D4+0:22](-[#1D1+0:23])(-[#1D1+0:24])(-[#6D4+0:25](-[#1D1+0:26])(-[#6D3+0:27](=[#8D1+0:28])-[#7D3+0:29](-[#1D1+0:30])-[#6D4+0:31](-[#1D1+0:32])(-[#6D4+0:33](-[#1D1+0:34])(-[#1D1+0:35])-[#1D1+0:36])-[#6D4+0:37](-[#1D1+0:38])(-[#1D1+0:39])-[#1D1+0:40])-[#1D1+0:41])-[*:42]",
                        "pnipam_TERM3": "[#6D4+0:22](-[#1D1+0:23])(-[#1D1+0:24])(-[#6D4+0:25](-[#1D1+0:26])(-[#6D3+0:27](=[#8D1+0:28])-[#7D3+0:29](-[#1D1+0:30])-[#6D4+0:31](-[#1D1+0:32])(-[#6D4+0:33](-[#1D1+0:34])(-[#1D1+0:35])-[#1D1+0:36])-[#6D4+0:37](-[#1D1+0:38])(-[#1D1+0:39])-[#1D1+0:40])-[*:41])-[#1D1+0:42]"
                    }
top = Topology.from_pdb("pnipam_modified.pdb", _custom_substructures=pnipam_substructs)
assert successfully_loaded(top)


substructs = {
                "atactic_styrene": "[#6D4+0:19](-[#6D4+0:20](-[#1D1+0:21])(-[#1D1+0:22])-[*:23])(-[#6D3+0:24]1-[#6D3+0:25](=[#6D3+0:26](-[#6D3+0:27](=[#6D3+0:28](-[#6D3+0:29]=1-[#1D1+0:30])-[#1D1+0:31])-[#1D1+0:32])-[#1D1+0:33])-[#1D1+0:34])(-[#1D1+0:35])-[*:36]",
                "atactic_styrene_TERM2": "[#6D4+0:19](-[#6D4+0:20](-[#1D1+0:21])(-[#1D1+0:22])-[#1D1+0:23])(-[#6D3+0:24]1-[#6D3+0:25](=[#6D3+0:26](-[#6D3+0:27](=[#6D3+0:28](-[#6D3+0:29]=1-[#1D1+0:30])-[#1D1+0:31])-[#1D1+0:32])-[#1D1+0:33])-[#1D1+0:34])(-[#1D1+0:35])-[*:36]",
                "atactic_styrene_TERM3": "[#6D4+0:19](-[#6D4+0:20](-[#1D1+0:21])(-[#1D1+0:22])-[*:23])(-[#6D3+0:24]1-[#6D3+0:25](=[#6D3+0:26](-[#6D3+0:27](=[#6D3+0:28](-[#6D3+0:29]=1-[#1D1+0:30])-[#1D1+0:31])-[#1D1+0:32])-[#1D1+0:33])-[#1D1+0:34])(-[#1D1+0:35])-[#1D1+0:36]"
            }
top = Topology.from_pdb("atactic_styrene.pdb", _custom_substructures=substructs)
assert successfully_loaded(top)

substructs = {
                "bisphenolA": "[*:34]-[#6D3+0:35]1-[#6D3+0:36](=[#6D3+0:37](-[#6D3+0:38](-[#6D4+0:39](-[#6D3+0:40]2-[#6D3+0:41](=[#6D3+0:42](-[#6D3+0:43](-[#8D2+0:44]-[#6D3+0:45](-[#8D2+0:46]-[*:47])=[#8D1+0:48])=[#6D3+0:49](-[#6D3+0:50]=2-[#1D1+0:51])-[#1D1+0:52])-[#1D1+0:53])-[#1D1+0:54])(-[#6D4+0:55](-[#1D1+0:56])(-[#1D1+0:57])-[#1D1+0:58])-[#6D4+0:59](-[#1D1+0:60])(-[#1D1+0:61])-[#1D1+0:62])=[#6D3+0:63](-[#6D3+0:64]=1-[#1D1+0:65])-[#1D1+0:66])-[#1D1+0:67])-[#1D1+0:68]",
                "bisphenolA_TERM1": "[#8D2+0:35](-[#6D3+0:36](-[#8D2+0:37]-[#6D3+0:38]1=[#6D3+0:39](-[#6D3+0:40](=[#6D3+0:41](-[#6D3+0:42](=[#6D3+0:43]-1-[#1D1+0:44])-[#1D1+0:45])-[#6D4+0:46](-[#6D4+0:47](-[#1D1+0:48])(-[#1D1+0:49])-[#1D1+0:50])(-[#6D4+0:51](-[#1D1+0:52])(-[#1D1+0:53])-[#1D1+0:54])-[#6D3+0:55]1-[#6D3+0:56](=[#6D3+0:57](-[#6D3+0:58](=[#6D3+0:59](-[#6D3+0:60]=1-[#1D1+0:61])-[#1D1+0:62])-[#1D1+0:63])-[#1D1+0:64])-[#1D1+0:65])-[#1D1+0:66])-[#1D1+0:67])=[#8D1+0:68])-[*:69]",
                "bisphenolA_TERM2": "[*:34]-[#6D3+0:35]1=[#6D3+0:36](-[#6D3+0:37](=[#6D3+0:38](-[#6D4+0:39](-[#6D3+0:40]2=[#6D3+0:41](-[#6D3+0:42](=[#6D3+0:43](-[#8D2+0:44]-[#6D3+0:45](-[#8D1-:46])=[#8D1+0:47])-[#6D3+0:48](=[#6D3+0:49]-2-[#1D1+0:50])-[#1D1+0:51])-[#1D1+0:52])-[#1D1+0:53])(-[#6D4+0:54](-[#1D1+0:55])(-[#1D1+0:56])-[#1D1+0:57])-[#6D4+0:58](-[#1D1+0:59])(-[#1D1+0:60])-[#1D1+0:61])-[#6D3+0:62](=[#6D3+0:63]-1-[#1D1+0:64])-[#1D1+0:65])-[#1D1+0:66])-[#1D1+0:67]"
            }
top = Topology.from_pdb("bisphenolA.pdb", _custom_substructures=substructs)
assert successfully_loaded(top)

substructs = {
                "paam": "[#6D4+0:13](-[#6D4+0:14](-[#1D1+0:15])(-[#1D1+0:16])-[*:17])(-[#6D3+0:18](=[#8D1+0:19])-[#7D3+0:20](-[#1D1+0:21])-[#1D1+0:22])(-[#1D1+0:23])-[*:24]",
                "paam_TERM2": "[#6D4+0:13](-[#6D4+0:14](-[#1D1+0:15])(-[#1D1+0:16])-[#1D1+0:17])(-[#6D3+0:18](=[#8D1+0:19])-[#7D3+0:20](-[#1D1+0:21])-[#1D1+0:22])(-[#1D1+0:23])-[*:24]",
                "paam_TERM3": "[#6D4+0:13](-[#6D4+0:14](-[#1D1+0:15])(-[#1D1+0:16])-[*:17])(-[#6D3+0:18](=[#8D1+0:19])-[#7D3+0:20](-[#1D1+0:21])-[#1D1+0:22])(-[#1D1+0:23])-[#1D1+0:24]",
                "paam_SPECIAL_TERM": "[#6D4+0:15](-[*:16])(-[#1D1+0:17])(-[#1D1+0:18])-[#6D4+0:19](-[#6D4+0:20](-[#1D1+0:21])(-[#1D1+0:22])-[#1D1+0:23])(-[#6D3+0:24](=[#8D1+0:25])-[#7D3+0:26](-[#1D1+0:27])-[#1D1+0:28])-[#1D1+0:29]"
            }
top = Topology.from_pdb("paam_modified.pdb", _custom_substructures=substructs)
assert successfully_loaded(top)

substructs = {
                "PAMAM": "[*:19]-[#6D4+0:20](-[#6D4+0:21](-[#6D3+0:22](-[#7D3+0:23](-[#6D4+0:24](-[#6D4+0:25](-[#7D4+0:26](-[*:27])(-[*:28])-[#1D1+0:29])(-[#1D1+0:30])-[#1D1+0:31])(-[#1D1+0:32])-[#1D1+0:33])-[#1D1+0:34])=[#8D1+0:35])(-[#1D1+0:36])-[#1D1+0:37])(-[#1D1+0:38])-[#1D1+0:39]",
                "PAMAM_START": "[#7D4+0:11](-[#6D4+0:12](-[#6D4+0:13](-[#7D4+0:14](-[*:15])(-[*:16])-[#1D1+0:17])(-[#1D1+0:18])-[#1D1+0:19])(-[#1D1+0:20])-[#1D1+0:21])(-[*:22])(-[*:23])-[#1D1+0:24]",
                "PAMAM_TERM1": "[*:20]-[#6D4+0:21](-[#6D4+0:22](-[#6D3+0:23](-[#7D3+0:24](-[#6D4+0:25](-[#6D4+0:26](-[#7D3+0:27](-[#1D1+0:28])-[#1D1+0:29])(-[#1D1+0:30])-[#1D1+0:31])(-[#1D1+0:32])-[#1D1+0:33])-[#1D1+0:34])=[#8D1+0:35])(-[#1D1+0:36])-[#1D1+0:37])(-[#1D1+0:38])-[#1D1+0:39]"
            }
top = Topology.from_pdb("PAMAM.pdb", _custom_substructures=substructs)
assert successfully_loaded(top)

substructs = {
                "peg": "[#6D4+0:13](-[#1D1+0:14])(-[#1D1+0:15])(-[#6D4+0:16](-[#1D1+0:17])(-[#1D1+0:18])-[#8D2+0:19]-[*:20])-[*:21]",
                "peg_TERM2": "[#6D4+0:16](-[#1D1+0:17])(-[#1D1+0:18])(-[#6D4+0:19](-[#1D1+0:20])(-[#1D1+0:21])-[#8D2+0:22]-[#6D4+0:23](-[#1D1+0:24])(-[#1D1+0:25])-[#1D1+0:26])-[*:27]",
                "peg_TERM3": "[#6D4+0:17](-[#1D1+0:18])(-[#1D1+0:19])(-[#6D4+0:20](-[#1D1+0:21])(-[#1D1+0:22])-[#8D2+0:23]-[*:24])-[#8D2+0:25]-[#6D4+0:26](-[#1D1+0:27])(-[#1D1+0:28])-[#1D1+0:29]"
            }
top = Topology.from_pdb("peg_modified.pdb", _custom_substructures=substructs)
assert successfully_loaded(top)

substructs = {
                "PEG": "[#6D4+0:10](-[#6D4+0:11](-[#8D2+0:12]-[*:13])(-[#1D1+0:14])-[#1D1+0:15])(-[#1D1+0:16])(-[#1D1+0:17])-[*:18]",
                "PEG_TERM2": "[#6D4+0:10](-[#6D4+0:11](-[#8D2+0:12]-[#1D1+0:13])(-[#1D1+0:14])-[#1D1+0:15])(-[#1D1+0:16])(-[#1D1+0:17])-[*:18]",
                "PEG_TERM3": "[#6D4+0:10](-[#6D4+0:11](-[#8D2+0:12]-[*:13])(-[#1D1+0:14])-[#1D1+0:15])(-[#1D1+0:16])(-[#1D1+0:17])-[#1D1+0:18]",
                "PLGA1": "[#8D2+0:12](-[#6D3+0:13](=[#8D1+0:14])-[#6D4+0:15](-[#1D1+0:16])(-[#6D4+0:17](-[#1D1+0:18])(-[#1D1+0:19])-[#1D1+0:20])-[*:21])-[*:22]",
                "PLGA1_TERM2": "[#8D2+0:12](-[#6D3+0:13](=[#8D1+0:14])-[#6D4+0:15](-[#1D1+0:16])(-[#6D4+0:17](-[#1D1+0:18])(-[#1D1+0:19])-[#1D1+0:20])-[#1D1+0:21])-[*:22]",
                "PLGA1_TERM3": "[#8D2+0:12](-[#6D3+0:13](=[#8D1+0:14])-[#6D4+0:15](-[#1D1+0:16])(-[#6D4+0:17](-[#1D1+0:18])(-[#1D1+0:19])-[#1D1+0:20])-[*:21])-[#1D1+0:22]",
                "PLGA2": "[#8D2+0:9](-[#6D3+0:10](=[#8D1+0:11])-[#6D4+0:12](-[#1D1+0:13])(-[#1D1+0:14])-[*:15])-[*:16]",
                "PLGA2_TERM2": "[#8D2+0:9](-[#6D3+0:10](=[#8D1+0:11])-[#6D4+0:12](-[#1D1+0:13])(-[#1D1+0:14])-[#1D1+0:15])-[*:16]",
                "PLGA2_TERM3": "[#8D2+0:9](-[#6D3+0:10](=[#8D1+0:11])-[#6D4+0:12](-[#1D1+0:13])(-[#1D1+0:14])-[*:15])-[#1D1+0:16]"
            }
top = Topology.from_pdb("PEO_PLGA.pdb", _custom_substructures=substructs)
assert successfully_loaded(top)

substructs = {
                "polyethylmethacrylate": "[#6D4+0:19](-[#6D4+0:20](-[*:21])(-[#6D4+0:22](-[#1D1+0:23])(-[#1D1+0:24])-[#1D1+0:25])-[#6D3+0:26](=[#8D1+0:27])-[#8D2+0:28]-[#6D4+0:29](-[#6D4+0:30](-[#1D1+0:31])(-[#1D1+0:32])-[#1D1+0:33])(-[#1D1+0:34])-[#1D1+0:35])(-[#1D1+0:36])(-[*:37])-[#1D1+0:38]",
                "polyethylmethacrylate_TERM2": "[#1D1+0:20]-[#6D4+0:21](-[#6D4+0:22](-[#1D1+0:23])(-[#1D1+0:24])-[#1D1+0:25])(-[#6D3+0:26](=[#8D1+0:27])-[#8D2+0:28]-[#6D4+0:29](-[#6D4+0:30](-[#1D1+0:31])(-[#1D1+0:32])-[#1D1+0:33])(-[#1D1+0:34])-[#1D1+0:35])-[#6D4+0:36](-[*:37])(-[#1D1+0:38])-[#1D1+0:39]",
                "polyethylmethacrylate_TERM3": "[#6D4+0:20](-[#6D4+0:21](-[*:22])(-[#6D4+0:23](-[#1D1+0:24])(-[#1D1+0:25])-[#1D1+0:26])-[#6D3+0:27](=[#8D1+0:28])-[#8D2+0:29]-[#6D4+0:30](-[#6D4+0:31](-[#1D1+0:32])(-[#1D1+0:33])-[#1D1+0:34])(-[#1D1+0:35])-[#1D1+0:36])(-[#1D1+0:37])(-[#1D1+0:38])-[#1D1+0:39]"
            }
top = Topology.from_pdb("polyethylmethacrylate.pdb", _custom_substructures=substructs)
assert successfully_loaded(top)

substructs = {
                "polymethylketone": "[*:59]-[#6D3+0:60]1=[#6D3+0:61](-[#6D3+0:62](=[#6D3+0:63](-[#6D3+0:64](-[#6D3+0:65]2-[#6D3+0:66](=[#6D3+0:67](-[#6D3+0:68](=[#6D3+0:69](-[#6D3+0:70]=2-[#1D1+0:71])-[#1D1+0:72])-[#8D2+0:73]-[#6D3+0:74]2=[#6D3+0:75](-[#6D3+0:76](=[#6D3+0:77](-[#6D4+0:78]34-[#6D4+0:79](-[#6D4+0:80]5(-[#6D4+0:81](-[#6D4+0:82](-[#6D4+0:83](-[#6D4+0:84](-[#6D4+0:85]-5(-[#1D1+0:86])-[#1D1+0:87])(-[#6D4+0:88]-3(-[#1D1+0:89])-[#1D1+0:90])-[#1D1+0:91])(-[#1D1+0:92])-[#1D1+0:93])(-[#6D4+0:94]-4(-[#1D1+0:95])-[#1D1+0:96])-[#1D1+0:97])(-[#1D1+0:98])-[#1D1+0:99])-[#1D1+0:100])(-[#1D1+0:101])-[#1D1+0:102])-[#6D3+0:103](=[#6D3+0:104]-2-[#1D1+0:105])-[#8D2+0:106]-[*:107])-[#1D1+0:108])-[#1D1+0:109])-[#1D1+0:110])-[#1D1+0:111])=[#8D1+0:112])-[#6D3+0:113](=[#6D3+0:114]-1-[#1D1+0:115])-[#1D1+0:116])-[#1D1+0:117])-[#1D1+0:118]",
                "polymethylketone_TERM24": "[*:60]-[#6D3+0:61]1=[#6D3+0:62](-[#6D3+0:63](=[#6D3+0:64](-[#6D3+0:65](-[#6D3+0:66]2=[#6D3+0:67](-[#6D3+0:68](=[#6D3+0:69](-[#6D3+0:70](=[#6D3+0:71]-2-[#1D1+0:72])-[#1D1+0:73])-[#8D2+0:74]-[#6D3+0:75]2=[#6D3+0:76](-[#6D3+0:77](=[#6D3+0:78](-[#6D4+0:79]34-[#6D4+0:80](-[#6D4+0:81]5(-[#6D4+0:82](-[#6D4+0:83](-[#6D4+0:84](-[#6D4+0:85](-[#6D4+0:86]-5(-[#1D1+0:87])-[#1D1+0:88])(-[#6D4+0:89]-3(-[#1D1+0:90])-[#1D1+0:91])-[#1D1+0:92])(-[#1D1+0:93])-[#1D1+0:94])(-[#6D4+0:95]-4(-[#1D1+0:96])-[#1D1+0:97])-[#1D1+0:98])(-[#1D1+0:99])-[#1D1+0:100])-[#1D1+0:101])(-[#1D1+0:102])-[#1D1+0:103])-[#6D3+0:104](=[#6D3+0:105]-2-[#1D1+0:106])-[#8D2+0:107]-[#1D1+0:108])-[#1D1+0:109])-[#1D1+0:110])-[#1D1+0:111])-[#1D1+0:112])=[#8D1+0:113])-[#6D3+0:114](=[#6D3+0:115]-1-[#1D1+0:116])-[#1D1+0:117])-[#1D1+0:118])-[#1D1+0:119]",
                "polymethylketone_TERM25": "[#8D2+0:60](-[#6D3+0:61]1=[#6D3+0:62](-[#1D1+0:63])-[#6D3+0:64](-[#1D1+0:65])=[#6D3+0:66](-[#6D4+0:67]23-[#6D4+0:68](-[#1D1+0:69])(-[#1D1+0:70])-[#6D4+0:71]4(-[#1D1+0:72])-[#6D4+0:73](-[#1D1+0:74])(-[#1D1+0:75])-[#6D4+0:76](-[#1D1+0:77])(-[#6D4+0:78](-[#1D1+0:79])(-[#1D1+0:80])-[#6D4+0:81](-[#1D1+0:82])(-[#6D4+0:83]-4(-[#1D1+0:84])-[#1D1+0:85])-[#6D4+0:86]-2(-[#1D1+0:87])-[#1D1+0:88])-[#6D4+0:89]-3(-[#1D1+0:90])-[#1D1+0:91])-[#6D3+0:92](-[#8D2+0:93]-[*:94])=[#6D3+0:95]-1-[#1D1+0:96])-[#6D3+0:97]1-[#6D3+0:98](-[#1D1+0:99])=[#6D3+0:100](-[#1D1+0:101])-[#6D3+0:102](=[#6D3+0:103](-[#1D1+0:104])-[#6D3+0:105]=1-[#1D1+0:106])-[#6D3+0:107](-[#6D3+0:108]1-[#6D3+0:109](-[#1D1+0:110])=[#6D3+0:111](-[#1D1+0:112])-[#6D3+0:113](-[#1D1+0:114])=[#6D3+0:115](-[#1D1+0:116])-[#6D3+0:117]=1-[#1D1+0:118])=[#8D1+0:119]"
            }
top = Topology.from_pdb("polymethylketone.pdb", _custom_substructures=substructs)
assert successfully_loaded(top)

substructs = {
        "polyphenylene1": "[*:12]-[#6D3+0:13]1=[#6D3+0:14](-[#6D3+0:15](=[#6D3+0:16](-[#6D3+0:17](=[#6D3+0:18]-1-[#1D1+0:19])-[#1D1+0:20])-[#1D1+0:21])-[#1D1+0:22])-[#1D1+0:23]",
        "polyphenylene6": "[*:7]-[#6D3+0:8]1-[#6D3+0:9](=[#6D3+0:10](-[#6D3+0:11](=[#6D3+0:12](-[#6D3+0:13]=1-[*:14])-[*:15])-[*:16])-[*:17])-[*:18]",
        "polyphenylene2": "[#6D3+0:11]1(=[#6D3+0:12](-[#6D3+0:13](=[#6D3+0:14](-[#6D3+0:15](=[#6D3+0:16]-1-[#1D1+0:17])-[*:18])-[#1D1+0:19])-[#1D1+0:20])-[*:21])-[#1D1+0:22]",
        "polyphenylene3": "[*:10]-[#6D3+0:11]1-[#6D3+0:12](-[#6D3+0:13](-[#6D3+0:14](-[#6D3+0:15](-[#6D3+0:16]-1-[#1D1+0:17])-[*:18])-[#1D1+0:19])-[*:20])-[#1D1+0:21]",
        "polyphenylene5": "[*:8]-[#6D3+0:9]1-[#6D3+0:10](=[#6D3+0:11](-[#6D3+0:12](=[#6D3+0:13](-[#6D3+0:14]=1-[*:15])-[*:16])-[*:17])-[#1D1+0:18])-[*:19]",
        "polyphenylene_mid": "[*:24]-[#6D3+0:25]1-[#6D3+0:26](=[#6D3+0:27](-[#6D3+0:28](=[#6D3+0:29](-[#6D3+0:30]=1-[#1D1+0:31])-[#1D1+0:32])-[#6D4+0:33](-[#6D3+0:34]1-[#6D3+0:35](=[#6D3+0:36](-[#6D3+0:37](-[*:38])=[#6D3+0:39](-[#6D3+0:40]=1-[#1D1+0:41])-[#1D1+0:42])-[#1D1+0:43])-[#1D1+0:44])(-[#1D1+0:45])-[#1D1+0:46])-[#1D1+0:47])-[#1D1+0:48]"
    }
top = Topology.from_pdb("polyphenyleneI.pdb", _custom_substructures=substructs)
assert successfully_loaded(top)

substructs = {
        "polyphenylene1": "[*:12]-[#6D3+0:13]1=[#6D3+0:14](-[#6D3+0:15](=[#6D3+0:16](-[#6D3+0:17](=[#6D3+0:18]-1-[#1D1+0:19])-[#1D1+0:20])-[#1D1+0:21])-[#1D1+0:22])-[#1D1+0:23]",
        "polyphenylene6": "[*:7]-[#6D3+0:8]1-[#6D3+0:9](=[#6D3+0:10](-[#6D3+0:11](=[#6D3+0:12](-[#6D3+0:13]=1-[*:14])-[*:15])-[*:16])-[*:17])-[*:18]",
        "polyphenylene2": "[#6D3+0:11]1(=[#6D3+0:12](-[#6D3+0:13](=[#6D3+0:14](-[#6D3+0:15](=[#6D3+0:16]-1-[#1D1+0:17])-[*:18])-[#1D1+0:19])-[#1D1+0:20])-[*:21])-[#1D1+0:22]",
        "polyphenylene3": "[*:10]-[#6D3+0:11]1-[#6D3+0:12](-[#6D3+0:13](-[#6D3+0:14](-[#6D3+0:15](-[#6D3+0:16]-1-[#1D1+0:17])-[*:18])-[#1D1+0:19])-[*:20])-[#1D1+0:21]",
        "polyphenylene5": "[*:8]-[#6D3+0:9]1-[#6D3+0:10](=[#6D3+0:11](-[#6D3+0:12](=[#6D3+0:13](-[#6D3+0:14]=1-[*:15])-[*:16])-[*:17])-[#1D1+0:18])-[*:19]",
        "polyphenylene_mid": "[*:24]-[#6D3+0:25]1-[#6D3+0:26](=[#6D3+0:27](-[#6D3+0:28](=[#6D3+0:29](-[#6D3+0:30]=1-[#1D1+0:31])-[#1D1+0:32])-[#6D4+0:33](-[#6D3+0:34]1-[#6D3+0:35](=[#6D3+0:36](-[#6D3+0:37](-[*:38])=[#6D3+0:39](-[#6D3+0:40]=1-[#1D1+0:41])-[#1D1+0:42])-[#1D1+0:43])-[#1D1+0:44])(-[#1D1+0:45])-[#1D1+0:46])-[#1D1+0:47])-[#1D1+0:48]"
    }
top = Topology.from_pdb("polyphenyleneII.pdb", _custom_substructures=substructs)
assert successfully_loaded(top)

substructs = {
        "polyphenylene1": "[*:12]-[#6D3+0:13]1=[#6D3+0:14](-[#6D3+0:15](=[#6D3+0:16](-[#6D3+0:17](=[#6D3+0:18]-1-[#1D1+0:19])-[#1D1+0:20])-[#1D1+0:21])-[#1D1+0:22])-[#1D1+0:23]",
        "polyphenylene6": "[*:7]-[#6D3+0:8]1-[#6D3+0:9](=[#6D3+0:10](-[#6D3+0:11](=[#6D3+0:12](-[#6D3+0:13]=1-[*:14])-[*:15])-[*:16])-[*:17])-[*:18]",
        "polyphenylene2": "[#6D3+0:11]1(=[#6D3+0:12](-[#6D3+0:13](=[#6D3+0:14](-[#6D3+0:15](=[#6D3+0:16]-1-[#1D1+0:17])-[*:18])-[#1D1+0:19])-[#1D1+0:20])-[*:21])-[#1D1+0:22]",
        "polyphenylene3": "[*:10]-[#6D3+0:11]1-[#6D3+0:12](-[#6D3+0:13](-[#6D3+0:14](-[#6D3+0:15](-[#6D3+0:16]-1-[#1D1+0:17])-[*:18])-[#1D1+0:19])-[*:20])-[#1D1+0:21]",
        "polyphenylene5": "[*:8]-[#6D3+0:9]1-[#6D3+0:10](=[#6D3+0:11](-[#6D3+0:12](=[#6D3+0:13](-[#6D3+0:14]=1-[*:15])-[*:16])-[*:17])-[#1D1+0:18])-[*:19]",
        "polyphenylene_mid": "[*:24]-[#6D3+0:25]1-[#6D3+0:26](=[#6D3+0:27](-[#6D3+0:28](=[#6D3+0:29](-[#6D3+0:30]=1-[#1D1+0:31])-[#1D1+0:32])-[#6D4+0:33](-[#6D3+0:34]1-[#6D3+0:35](=[#6D3+0:36](-[#6D3+0:37](-[*:38])=[#6D3+0:39](-[#6D3+0:40]=1-[#1D1+0:41])-[#1D1+0:42])-[#1D1+0:43])-[#1D1+0:44])(-[#1D1+0:45])-[#1D1+0:46])-[#1D1+0:47])-[#1D1+0:48]"
    }
top = Topology.from_pdb("PolyphenyleneIII.pdb", _custom_substructures=substructs)
assert successfully_loaded(top)


substructs = {
        "polyphenylenesulfone": "[*:14]-[#6D3+0:15]1=[#6D3+0:16](-[#6D3+0:17](=[#6D3+0:18](-[#16D4+0:19](=[#8D1+0:20])(=[#8D1+0:21])-[*:22])-[#6D3+0:23](=[#6D3+0:24]-1-[#1D1+0:25])-[#1D1+0:26])-[#1D1+0:27])-[#1D1+0:28]",
        "polyphenylenesulfone_TERM5": "[*:15]-[#6D3+0:16]1=[#6D3+0:17](-[#6D3+0:18](=[#6D3+0:19](-[#16D4+0:20](=[#8D1+0:21])(=[#8D1+0:22])-[#1D1+0:23])-[#6D3+0:24](=[#6D3+0:25]-1-[#1D1+0:26])-[#1D1+0:27])-[#1D1+0:28])-[#1D1+0:29]",
        "polyphenylenesulfone_TERM13": "[*:15]-[#16D4+0:16](=[#8D1+0:17])(-[#6D3+0:18]1=[#6D3+0:19](-[#6D3+0:20](=[#6D3+0:21](-[#6D3+0:22](=[#6D3+0:23]-1-[#1D1+0:24])-[#1D1+0:25])-[#1D1+0:26])-[#1D1+0:27])-[#1D1+0:28])=[#8D1+0:29]"
    }
top = Topology.from_pdb("polyphenylenesulfone.pdb", _custom_substructures=substructs)
assert successfully_loaded(top)


substructs = {
        "polythiophene": "[*:20]-[#6D3+0:21]1=[#6D3+0:22](-[#6D3+0:23](=[#6D3+0:24](-[#16D2+0:25]-1)-[*:26])-[#6D4+0:27](-[#6D4+0:28](-[#6D4+0:29](-[#6D4+0:30](-[#1D1+0:31])(-[#1D1+0:32])-[#1D1+0:33])(-[#1D1+0:34])-[#1D1+0:35])(-[#1D1+0:36])-[#1D1+0:37])(-[#1D1+0:38])-[#1D1+0:39])-[#1D1+0:40]",
        "polythiophene_TERM1": "[#6D3+0:21]1(=[#6D3+0:22](-[#6D4+0:23](-[#6D4+0:24](-[#6D4+0:25](-[#6D4+0:26](-[#1D1+0:27])(-[#1D1+0:28])-[#1D1+0:29])(-[#1D1+0:30])-[#1D1+0:31])(-[#1D1+0:32])-[#1D1+0:33])(-[#1D1+0:34])-[#1D1+0:35])-[#6D3+0:36](=[#6D3+0:37](-[#16D2+0:38]-1)-[#35D1+0:39])-[#1D1+0:40])-[*:41]",
        "polythiophene_TERM2": "[*:21]-[#6D3+0:22]1=[#6D3+0:23](-[#6D3+0:24](=[#6D3+0:25](-[#35D1+0:26])-[#16D2+0:27]-1)-[#6D4+0:28](-[#6D4+0:29](-[#6D4+0:30](-[#6D4+0:31](-[#1D1+0:32])(-[#1D1+0:33])-[#1D1+0:34])(-[#1D1+0:35])-[#1D1+0:36])(-[#1D1+0:37])-[#1D1+0:38])(-[#1D1+0:39])-[#1D1+0:40])-[#1D1+0:41]"
    }
top = Topology.from_pdb("polythiophene.pdb", _custom_substructures=substructs)
assert successfully_loaded(top)

substructs = {
        "polyvinylchloride": "[*:7]-[#6D4+0:8](-[#1D1+0:9])(-[#1D1+0:10])-[#6D4+0:11](-[#17D1+0:12])(-[#1D1+0:13])-[*:14]",
        "polyvinylchloride_TERM2": "[*:8]-[#6D4+0:9](-[#6D4+0:10](-[#17D1+0:11])(-[#1D1+0:12])-[#1D1+0:13])(-[#1D1+0:14])-[#1D1+0:15]",
        "polyvinylchloride_TERM4": "[#6D4+0:8](-[*:9])(-[#1D1+0:10])(-[#17D1+0:11])-[#6D4+0:12](-[#1D1+0:13])(-[#1D1+0:14])-[#1D1+0:15]"
    }
top = Topology.from_pdb("polyvinylchloride.pdb", _custom_substructures=substructs)
assert successfully_loaded(top)

substructs = {
        "syntactic_styrene": "[*:17]-[#6D4+0:18](-[#6D4+0:19](-[#1D1+0:20])(-[#1D1+0:21])-[*:22])(-[#6D3+0:23]1=[#6D3+0:24](-[#6D3+0:25](=[#6D3+0:26](-[#6D3+0:27](=[#6D3+0:28]-1-[#1D1+0:29])-[#1D1+0:30])-[#1D1+0:31])-[#1D1+0:32])-[#1D1+0:33])-[#1D1+0:34]",
        "syntactic_styrene_TERM1": "[*:18]-[#6D4+0:19](-[#6D4+0:20](-[#1D1+0:21])(-[#1D1+0:22])-[#1D1+0:23])(-[#6D3+0:24]1=[#6D3+0:25](-[#6D3+0:26](=[#6D3+0:27](-[#6D3+0:28](=[#6D3+0:29]-1-[#1D1+0:30])-[#1D1+0:31])-[#1D1+0:32])-[#1D1+0:33])-[#1D1+0:34])-[#1D1+0:35]",
        "syntactic_styrene_TERM7": "[#6D4+0:18](-[*:19])(-[#1D1+0:20])(-[#1D1+0:21])-[#6D4+0:22](-[#6D3+0:23]1=[#6D3+0:24](-[#6D3+0:25](=[#6D3+0:26](-[#6D3+0:27](=[#6D3+0:28]-1-[#1D1+0:29])-[#1D1+0:30])-[#1D1+0:31])-[#1D1+0:32])-[#1D1+0:33])(-[#1D1+0:34])-[#1D1+0:35]"
    }
top = Topology.from_pdb("syntactic_styrene.pdb", _custom_substructures=substructs)
assert successfully_loaded(top)


# substructs = {
#                 "asdf": "asdf"
#              }
# top = Topology.from_pdb("test.pdb", _custom_substructures=substructs)
# assert successfully_loaded(top)

# #______________FUNCTIONALIZED PROTEIN (existing + custom substructures)________

# five_xg9_substructs = {
#                         "peg": "[#6D4+0:13](-[#1D1+0:14])(-[#1D1+0:15])(-[#6D4+0:16](-[#1D1+0:17])(-[#1D1+0:18])-[#8D2+0:19]-[*:20])-[*:21]",
#                         "peg_TERM1": "[#6D4+0:16](-[#1D1+0:17])(-[#1D1+0:18])(-[#6D4+0:19](-[#1D1+0:20])(-[#1D1+0:21])-[#8D2+0:22]-[#1D1+0:23])-[*:27]",
#                         "peg_TERM2": "[#6D4+0:16](-[#1D1+0:17])(-[#1D1+0:18])(-[#6D4+0:19](-[#1D1+0:20])(-[#1D1+0:21])-[#8D2+0:22]-[*:23])-[#1D1+0:27]",
#                         "H2O2": "[#8D2+0:1](-[#1D1+0:2])-[#8D2+0:1](-[#1D1+0:3])",
#                         "TRP_neg": "[#1D1+0:1]-[#6D3+0:2]1-[#7D2-1:3]-[#6D3+0:4]2-[#6D3+0:5](-[#1D1+0:6])=[#6D3+0:7](-[#1D1+0:8])-[#6D3+0:9](-[#1D1+0:10])=[#6D3+0:11](-[#1D1+0:12])-[#6D3+0:13]=2-[#6D3+0:14]=1-[#6D4+0:15](-[#1D1+0:16])(-[#1D1+0:17])-[#6D4+0:18]([#1D1+0:19])([#7D3+0:20]([#1D1+0:24])([*:25]))([#6D3+0:21](=[#8D1+0:22])([*:23]))",
#                         "LEU_Ald_TERM": "[#7D3+0:1]([#1D1+0:2])([*:3])-[#6D4+0:4]([#1D1+0:5])([#6D4+0:6]([#1D1+0:7])([#1D1+0:8])([#1D1+0:9]))-[#6D3+0:10](-[#1D1+0:11])=[#8D1+0:12]"
#                       }
# top = Topology.from_pdb("5xg9_hydrogenated_fixed_bond.pdb", _custom_substructures=five_xg9_substructs)

# assert successfully_loaded(top)